#################################################################################
#                               OneBranch Pipelines                             #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger:
- main

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  DEBIAN_FRONTEND: noninteractive

  # IMPORTANT: This image comes with OpenSSL development files. If the container image is changed, cgmanifest.json needs to be updated
  LinuxContainerImage: 'onebranch.azurecr.io/linux/ubuntu-2004:latest' # Docker image which is used to build the project https://aka.ms/obpipelines/containers

resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    featureFlags:
      linuxEsrpSigningPreview: true

    cloudvault: # https://aka.ms/obpipelines/cloudvault
      enabled: false # set to true to enable cloudvault
      runmode: stage # linux can run CloudVault upload as a separate stage
      dependsOn: linux_build
      artifacts:
        - drop_linux_stage_linux_job

    globalSdl: # https://aka.ms/obpipelines/sdl
      tsa:
       enabled: true # SDL results of non-official builds aren't uploaded to TSA by default.
      credscan:
        suppressionsFile: $(Build.SourcesDirectory)\.config\CredScanSuppressions.json
      policheck:
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'

    stages:
      - template: VM-Baremetal-Common.yml@self
      - template: Containers-Common.yml@self

      - stage: Versioning
        dependsOn: []
        jobs:
        - job: Version
          displayName: Version Pipeline

          pool:
            type: linux

          variables:
            ob_outputDirectory: '$(Build.SourcesDirectory)/out'

          steps:
            - task: onebranch.pipeline.version@1
              displayName: 'Setup BuildNumber'
              inputs:
                system: 'RevisionCounter'
                major: '1'
                minor: '0'
                exclude_commit: true

            - task: Bash@3
              displayName: 'Version'
              inputs:
                filePath: '$(Build.SourcesDirectory)/scripts/version.sh'
                workingDirectory: '$(Build.SourcesDirectory)'

            - task: onebranch.pipeline.version@1
              inputs:
                system: 'Custom'
                customVersion: '$(CUSTOM_VERSION)'

      - stage: Signing
        dependsOn:
        - Build
        - Test
        condition: succeeded('Build')

        jobs:
        - job: Sign
          displayName: Sign

          pool:
            type: linux

          variables:
            ob_outputDirectory: '$(Build.SourcesDirectory)/out'

          steps:
            - download: current
              artifact: drop_Build_AMD64_ubuntu
            - download: current
              artifact: drop_Build_AMD64_mariner

            - task: Bash@3
              displayName: 'Copy artifact files from drop'
              inputs:
                targetType: 'inline'
                script: |
                  mkdir -p $(ob_outputDirectory)/pkg
                  cp -avr $(Pipeline.Workspace)/drop_Build_AMD64_ubuntu/pkg/* $(ob_outputDirectory)/pkg/
                  cp -avr $(Pipeline.Workspace)/drop_Build_AMD64_mariner/pkg/* $(ob_outputDirectory)/pkg/

            - task: onebranch.pipeline.signing@1
              displayName: 'Sign Packages'
              inputs:
                command: 'sign'
                signing_environment: 'azure-ado'
                signing_profile: 'CP-459159-pgpdetached'
                files_to_sign: '*.deb;*.rpm;'
                search_root: '$(ob_outputDirectory)/pkg'