stages:
  - stage: Build
    dependsOn: []
    jobs:
    - job: AMD64
      pool:
        type: linux

      strategy:
        matrix:
          # each object represents one configuration and one job
          # https://aka.ms/obpipelines/containers
          ubuntu:
            Suffix: 'ubuntu'
            # IMPORTANT: This image comes with OpenSSL development files. If the container image is changed, cgmanifest.json needs to be updated
            LinuxContainerImage: 'onebranch.azurecr.io/linux/ubuntu-2004:latest'
          mariner:
            Suffix: 'mariner'
            LinuxContainerImage: 'mcr.microsoft.com/cbl-mariner/base/core:1.0	'

      variables:
        ob_outputDirectory: '$(Build.SourcesDirectory)/out' # this directory
        ob_artifactSuffix: _$(Suffix)

      steps: # These steps will be run in unrestricted container's network
        - task: Bash@3
          displayName: 'Setup'
          inputs:
            filePath: '$(Build.SourcesDirectory)/scripts/setup.sh'
            workingDirectory: '$(Build.SourcesDirectory)'

        - task: Bash@3
          displayName: 'Build'
          inputs:
            filePath: '$(Build.SourcesDirectory)/scripts/build.sh'
            workingDirectory: '$(Build.SourcesDirectory)'

        - task: GoTool@0
          displayName: 'Ensure Correct Go Version'
          inputs:
            version: '1.16.6'

        - task: Bash@3
          displayName: 'Package'
          inputs:
            filePath: '$(Build.SourcesDirectory)/scripts/package.sh'
            workingDirectory: '$(Build.SourcesDirectory)'

        - task: Bash@3
          displayName: 'Copy Artifacts to staging directory'
          inputs:
            targetType: 'inline'
            script: |
              mkdir -p $(ob_outputDirectory)
              cp -a ./bin $(ob_outputDirectory)
              cp -a ./pkg $(ob_outputDirectory)

  - stage: Test
    dependsOn: Build
    condition: succeeded()
    jobs:
    - job: Functional_Test
      displayName: Functional Test
      pool:
        type: linux

      strategy:
        matrix:
          # each object represents one configuration and one job
          # https://aka.ms/obpipelines/containers
          ubuntu18:
            Suffix: 'ubuntu18'
            ParentBuild: 'ubuntu'
            LinuxContainerImage: 'onebranch.azurecr.io/linux/ubuntu-1804:latest'
          ubuntu20:
            Suffix: 'ubuntu20'
            ParentBuild: 'ubuntu'
            LinuxContainerImage: 'onebranch.azurecr.io/linux/ubuntu-2004:latest'
          mariner:
            Suffix: 'mariner'
            ParentBuild: 'mariner'
            LinuxContainerImage: 'mcr.microsoft.com/cbl-mariner/base/core:1.0'
          # marinerv2:
          #   Suffix: 'marinerv2'
          #   ParentBuild: 'mariner'
          #   LinuxContainerImage: 'mcr.microsoft.com/cbl-mariner/base/core:2.0'

      variables:
        ob_outputDirectory: '$(Build.SourcesDirectory)/out' # this directory
        ob_artifactSuffix: _$(Suffix)

      steps:
        - download: current
          artifact: drop_Build_AMD64_$(ParentBuild)

        - task: Bash@3
          displayName: 'Copy artifact files'
          inputs:
            targetType: 'inline'
            script: |
              cp -r $(Pipeline.Workspace)/drop_Build_AMD64_$(ParentBuild)/* ./

        - task: Bash@3
          displayName: 'Setup'
          inputs:
            filePath: '$(Build.SourcesDirectory)/scripts/setup.sh'
            workingDirectory: '$(Build.SourcesDirectory)'

        - task: Bash@3
          displayName: 'Run Functional Tests'
          inputs:
            filePath: '$(Build.SourcesDirectory)/scripts/functional_test.sh'
            workingDirectory: '$(Build.SourcesDirectory)'

    - job: Unit_Test
      displayName: Unit Test
      pool:
        type: linux

      strategy:
        matrix:
          # each object represents one configuration and one job
          # https://aka.ms/obpipelines/containers
          ubuntu18:
            Suffix: 'ubuntu18'
            ParentBuild: 'ubuntu'
            LinuxContainerImage: 'onebranch.azurecr.io/linux/ubuntu-1804:latest'
          ubuntu20:
            Suffix: 'ubuntu20'
            ParentBuild: 'ubuntu'
            LinuxContainerImage: 'onebranch.azurecr.io/linux/ubuntu-2004:latest'
          mariner:
            Suffix: 'mariner'
            ParentBuild: 'mariner'
            LinuxContainerImage: 'mcr.microsoft.com/cbl-mariner/base/core:1.0'
          # marinerv2:
          #   Suffix: 'marinerv2'
          #   ParentBuild: 'mariner'
          #   LinuxContainerImage: 'mcr.microsoft.com/cbl-mariner/base/core:2.0'

      variables:
        ob_outputDirectory: '$(Build.SourcesDirectory)/out' # this directory
        ob_artifactSuffix: _$(Suffix)

      steps:
      - download: current
        artifact: drop_Build_AMD64_$(ParentBuild)

      - task: Bash@3
        displayName: 'Copy artifact files'
        inputs:
          targetType: 'inline'
          script: |
            cp -r $(Pipeline.Workspace)/drop_Build_AMD64_$(ParentBuild)/* ./

      - task: Bash@3
        displayName: 'Setup'
        inputs:
          filePath: '$(Build.SourcesDirectory)/scripts/setup.sh'
          workingDirectory: '$(Build.SourcesDirectory)'

      - task: Bash@3
        displayName: 'Run Unit Tests'
        inputs:
          filePath: '$(Build.SourcesDirectory)/scripts/unit_test.sh'
          workingDirectory: '$(Build.SourcesDirectory)'